/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing_basic;

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class TH3 {
    private ArrayList<sinhVien> list = new ArrayList<>();
    private JTextField jt1, jt2,jt3;
    private JFrame jf;
    private JButton jb_addfile, jb_readfile, jb_sort;
    private DefaultTableModel tableModel;
    private JTable table;
    private static int id = 1000;
    TH3(){
        setLayout();
    }
    public void setLayout(){
        jf = new JFrame("bai 2");
        jf.setSize(500, 600);
        jf.setLayout(new BorderLayout());
        setLayoutNorth();
        setLayoutCenter();
        setAction();
        
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setVisible(true);
    }
    public void setLayoutNorth(){
        JPanel jp0 = new JPanel();
        jp0.setLayout(new BorderLayout());
        jf.add(jp0,BorderLayout.NORTH);
        
        //set layout for button
        JPanel jp1 = new JPanel();
        jp1.setLayout(new GridLayout(3,1));
        jp0.add(jp1,BorderLayout.SOUTH);
        
        jb_addfile = new JButton("Add File");
        jp1.add(jb_addfile);
        
        jb_readfile = new JButton("Read File");
        jp1.add(jb_readfile);
        
        jb_sort = new JButton("Sort");
        jp1.add(jb_sort);
        
        //set layout cho nhap du lieu
        JPanel jp = new JPanel();
        jp0.add(jp, BorderLayout.CENTER);
        jp.setLayout(new GridLayout(3,2));
        
        //layout nhap
        JLabel jl1,jl2,jl3;
        
        jl1 = new JLabel("Ten: ");  jp.add(jl1);
        jt1 = new JTextField();     jp.add(jt1);
        
        jl2 = new JLabel("Lop: ");  jp.add(jl2);
        jt2 = new JTextField();     jp.add(jt2);
        
        jl3 = new JLabel("DTB: ");  jp.add(jl3);
        jt3 = new JTextField();     jp.add(jt3);
    }
    public void setLayoutCenter(){
        
        String[] nameColumns = {"ID", "Name", "Class", "DTB"};
        tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(nameColumns);
        table = new JTable();
        table.setModel(tableModel);
        JScrollPane js = new JScrollPane(table); 
        jf.add(js,BorderLayout.CENTER);
        jf.add(table,BorderLayout.CENTER);
        
    }
    public void setAction(){
        jb_addfile.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                checkException check = new checkException();
                String ten, lop, dtb;
                ten = jt1.getText();
                lop = jt2.getText();
                dtb = jt3.getText();
                try{
                    check.checkTen(ten);
                    System.out.println("ok");
                    check.checkLop(lop);
                    check.checkDTB(Double.valueOf(dtb));
                    sinhVien sv = new sinhVien(id++,ten,lop,Double.valueOf(dtb));
                    list.add(sv);
                    JOptionPane.showMessageDialog(null,"Ghi thanh cong!");
                }catch(myEx ex){
                    JOptionPane.showMessageDialog(null,"Nhap lai");
                }
                writeFile("SV.TXT");
            }
        });
        jb_readfile.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                readFile("SV.TXT");
                for(sinhVien sv: list)
                    hienthi(sv);
            }
        });
        jb_sort.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Collections.sort(list,new sortDTB());
                int n = tableModel.getRowCount();
                for(int i = 0; i < n; i++)
                    tableModel.removeRow(0);
                for(sinhVien sv: list)
                    hienthi(sv);
            }
        });
    }
    public void hienthi(sinhVien sv){
        String[] info = new String[4];
        info[0] = String.valueOf(sv.getMaSV());
        info[1] = sv.getTen();
        info[2] = sv.getLop();
        info[3] = String.valueOf(sv.getDtb());
        tableModel.addRow(info);
        
    }
    public static void main(String[] args) {
        new TH3();
    }
    public void writeFile(String path){
        PrintWriter sout = null;
        FileWriter fw = null;
        BufferedWriter bw = null;
        try{
            fw = new FileWriter(path,true);
            bw = new BufferedWriter(fw);
            sout = new PrintWriter(bw);
            for(sinhVien sv: list){
                sout.println(sv.getMaSV());
                sout.println(sv.getTen());
                sout.println(sv.getLop());
                sout.println(sv.getDtb());
            }
            
        }catch(FileNotFoundException e){
        } catch (IOException ex) {
            Logger.getLogger(TH3.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            sout.close();
        }
    }
    public void readFile(String path){
        list.clear();
        Scanner in = null;
        try {
            in = new Scanner(new File(path));
            while(in.hasNext()){
                sinhVien sv = new sinhVien();
                sv.setMaSV(in.nextInt());in.nextLine();
                sv.setTen(in.nextLine());
                sv.setLop(in.nextLine());
                sv.setDtb(in.nextDouble());
                list.add(sv);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TH3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
class sinhVien{
    protected int maSV;
    protected String ten;
    protected String lop;
    protected double dtb;
    sinhVien(){}
    public sinhVien(int maSV, String ten,String lop, double dtb){
        this.maSV = maSV++;
        this.ten = ten;
        this.lop = lop;
        this.dtb = dtb;
    }

    public void setMaSV(int maSV) {
        this.maSV = maSV;
    }

    public void setTen(String ten) {
        this.ten = ten;
    }

    public void setLop(String lop) {
        this.lop = lop;
    }

    public void setDtb(double dtb) {
        this.dtb = dtb;
    }

    public int getMaSV() {
        return maSV;
    }

    public String getTen() {
        return ten;
    }

    public String getLop() {
        return lop;
    }

    public double getDtb() {
        return dtb;
    }  
}
class myEx extends Exception{}
class checkException{
    public void checkTen(String ten) throws myEx{
        if(ten.length()==0)
            throw new myEx();
    }
    public void checkLop(String lop) throws myEx{
        String regex = "[dD]\\d{2}[dDcCqQnNkKtTaAvT]{4}\\d{2}-[bB]";
        if(!lop.matches(regex))
            throw new myEx();
    }
    public void checkDTB(double dtb) throws myEx{
        if(dtb<0 || dtb >10)
            throw new myEx();
    }
}
class sortDTB implements Comparator<sinhVien>{

    @Override
    public int compare(sinhVien o1, sinhVien o2) {
        return (o1.getDtb() > o2.getDtb())? -1:1;
    }

}
